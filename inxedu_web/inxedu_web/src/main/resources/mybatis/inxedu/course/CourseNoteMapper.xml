<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CourseNoteMapper">

        <resultMap id="CourseNoteResult" type="CourseNote">
            <result property="id" column="ID"/>
             <result property="courseId" column="COURSE_ID"/>
            <result property="kpointId" column="KPOINT_ID"/>
            <result property="userId" column="USER_ID"/>
            <result property="content" column="CONTENT"/>
            <result property="updateTime" column="UPDATE_TIME"/>
        </resultMap>
		
		<resultMap type="QueryCourseNote" id="QueryCourseNoteResult" extends="CourseNoteResult">
			<result property="nickname" column="nickname"/>
			<result property="email" column="email"/>
			<result property="pointName" column="pointName"/>
		</resultMap>
		
		<resultMap type="QueryCourseNote" id="QueryUserCourseNoteResult" extends="CourseNoteResult">
			<result property="pointName" column="pointName"/>
			<result property="courseName" column="courseName"/>
		</resultMap>
		
        <sql id="edu_course_note_columns">
            edu_course_note.id,
            edu_course_note.COURSE_ID,
            edu_course_note.KPOINT_ID,
            edu_course_note.USER_ID,
            edu_course_note.CONTENT,
            edu_course_note.UPDATE_TIME
        </sql>

        <sql id="edu_course_note_properties">
            #{id},
            #{courseId},
            #{kpointId},
            #{userId},
            #{content},
            #{updateTime}
        </sql>

        <insert id="createCourseNote" parameterType="CourseNote" keyColumn="id" keyProperty="id" useGeneratedKeys="true" >
            insert INTO edu_course_note (<include refid="edu_course_note_columns"/>) VALUES (<include refid="edu_course_note_properties"/>)
        </insert>

        <update id="updateCourseNote" parameterType="CourseNote">
            update edu_course_note SET
            	COURSE_ID = #{courseId},
                KPOINT_ID = #{kpointId},
                USER_ID = #{userId},
                CONTENT = #{content},
                UPDATE_TIME = #{updateTime}
            where
                KPOINT_ID = #{kpointId}
                and USER_ID = #{userId}
        </update>


         <select id="getCourseNoteByKpointIdAndUserId" resultMap="CourseNoteResult" parameterType="Map">
            select
            <include refid="edu_course_note_columns"/>
            from edu_course_note
            <where>
            KPOINT_ID = #{kpointId} and
            USER_ID = #{userId}
            </where>
        </select>
    <!-- 分页查询笔记-->
    <select id="queryCourseNoteForUcPage" resultMap="CourseNoteResult" parameterType="java.util.HashMap">
        select
        <include refid="edu_course_note_columns"/>,
        edu_course.course_name courseName,
        edu_course_kpoint.name kpointName
        FROM edu_course_note
        LEFT JOIN edu_course on edu_course.course_id = edu_course_note.course_id
        LEFT JOIN edu_course_kpoint on edu_course_kpoint.kpoint_id = edu_course_note.kpoint_id
        <where>
            <if test="e.userId != null and e.userId !=''">
                and edu_course_note.USER_ID = #{e.userId}
            </if>
        </where>
        ORDER BY edu_course_note.UPDATE_TIME DESC
    </select>
    <!-- 删除笔记-->
    <delete id="delNote" parameterType="java.util.HashMap">
        DELETE FROM edu_course_note
        WHERE
          edu_course_note.id = #{id}
    </delete>
</mapper>