<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CourseTeacherMapper">

	<resultMap id="CourseTeacherResult" type="CourseTeacher">
	<result property="courseId" column="COURSE_ID" />
	<result property="teacherId" column="TEACHER_ID" />
	</resultMap>

	<sql id="edu_course_teacher_columns">
	EDU_COURSE_TEACHER.COURSE_ID,
	EDU_COURSE_TEACHER.TEACHER_ID
	</sql>

	<!-- 添加课程与讲师的关联数 -->
	<insert id="createCourseTeacher" parameterType="java.lang.String">
	INSERT INTO EDU_COURSE_TEACHER(<include refid="edu_course_teacher_columns"/>) VALUES ${value}
	</insert>
	<!-- 删除课程与讲师的关联数据 -->
	<delete id="deleteCourseTeacher" parameterType="int">
	DELETE FROM EDU_COURSE_TEACHER WHERE COURSE_ID=#{value}
	</delete>

	<select id="getCourseTeacherListByCourse" resultType="CourseDto" parameterType="list">
		SELECT
		CONCAT(edu_course_teacher.course_id,'') as courseId,
		CONCAT(GROUP_CONCAT(edu_teacher.id),'') as title,
		GROUP_CONCAT(edu_teacher.NAME,'') as courseName,
		GROUP_CONCAT(edu_teacher.pic_path,'') as logo,
		GROUP_CONCAT(edu_teacher.IS_STAR,'') as subjectName<!-- 存储在 字段-->
		FROM edu_teacher
		LEFT JOIN edu_course_teacher ON
		edu_course_teacher.teacher_id = edu_teacher.id
		WHERE
		edu_course_teacher.course_id IS NOT NULL and edu_course_teacher.course_id in
		<foreach collection="list" item="item" separator="," open="("
				 close=")">
			#{item}
		</foreach>
		GROUP BY edu_course_teacher.course_id
	</select>

	<!--根据课程获得 讲师(课程购买数、浏览数等)-->
	<select id="getTeachersByCourse" resultType="Teacher" parameterType="QueryCourse">
		SELECT
			EDU_TEACHER.ID AS id,
			EDU_TEACHER.NAME AS NAME,
			EDU_TEACHER.EDUCATION AS education,
			EDU_TEACHER.career AS career,
			EDU_TEACHER.PIC_PATH AS picPath,
			IFNULL(SUM(edu_course.`page_buycount`),0) AS sum_page_buycount,
			IFNULL(SUM(edu_course.`page_viewcount`),0) AS sum_page_viewcount
		FROM `edu_course_teacher`
			LEFT JOIN `edu_course` ON `edu_course`.`course_id`=`edu_course_teacher`.`course_id`
			LEFT JOIN edu_teacher ON edu_teacher.`id`=edu_course_teacher.`teacher_id`
			<where>
				edu_teacher.`id` IS NOT NULL
				AND edu_teacher.`status`=0
				AND edu_course.course_id IS NOT NULL
				AND edu_course.`is_avaliable`=1
				<if test="sellType!=null and sellType!='' ">
					AND EDU_COURSE.SELL_TYPE = #{sellType}
				</if>
			</where>
			GROUP BY edu_course_teacher.`teacher_id`
			<if test="order=='PAGEBUYCOUNT'">
				ORDER BY sum_page_buycount DESC
			</if>
			<if test="order=='FOLLOW'">
				ORDER BY sum_page_viewcount DESC
			</if>
			<if test="count>0">
				LIMIT #{count}
			</if>
	</select>
</mapper>