<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserAccounthistoryMapper">

	<resultMap id="UserAccounthistoryResult" type="UserAccounthistory">
		<result property="id" column="id" />
		<result property="userId" column="user_id" />
		<result property="trxorderId" column="trxorder_id" />
		<result property="requestId" column="request_id" />
		<result property="outTradeNo" column="out_trade_no" />
		<result property="otherId" column="otherId" />
		<result property="createTime" column="create_time" />
		<result property="isDisplay" column="is_display" />
		<result property="balance" column="balance" />
		<result property="cashAmount" column="cash_amount" />
		<result property="vmAmount" column="vm_amount" />
		<result property="backAmount" column="backAmount" />
		<result property="trxAmount" column="trx_amount" />
		<result property="description" column="description" />
		<result property="actHistoryType" column="act_history_type" />
		<result property="bizType" column="biz_type" />
		<result property="version" column="version" />
		<result property="createUser" column="create_user" />
		<result property="updateTime" column="updateTime" />
		<result property="bank" column="bank" />
		<result property="card" column="card" />
		<result property="status" column="status" />
	</resultMap>

	<sql id="edu_user_accounthistory_columns">
		edu_user_accounthistory.id,
		edu_user_accounthistory.user_id,
		edu_user_accounthistory.trxorder_id,
		edu_user_accounthistory.request_id,
		edu_user_accounthistory.out_trade_no,
		edu_user_accounthistory.otherId,
		edu_user_accounthistory.create_time,
		edu_user_accounthistory.is_display,
		edu_user_accounthistory.balance,
		edu_user_accounthistory.trx_amount,
		edu_user_accounthistory.cash_amount,
		edu_user_accounthistory.vm_amount,
		edu_user_accounthistory.backAmount,
		edu_user_accounthistory.description,
		edu_user_accounthistory.act_history_type,
		edu_user_accounthistory.biz_type,
		edu_user_accounthistory.create_user,
		edu_user_accounthistory.updateTime,
		edu_user_accounthistory.bank,
		edu_user_accounthistory.card,
		edu_user_accounthistory.status
	</sql>

	<sql id="edu_user_accounthistory_properties">
		#{id},
		#{userId},
		#{trxorderId},
		#{requestId},
		#{outTradeNo},
		#{otherId},
		#{createTime},
		#{isDisplay},
		#{balance},
		#{trxAmount},
		#{cashAmount},
		#{vmAmount},
		#{backAmount},
		#{description},
		#{actHistoryType},
		#{bizType},
		#{createUser},
		#{updateTime},
		#{bank},
		#{card},
		#{status}
	</sql>

	<insert id="createUserAccounthistory" parameterType="UserAccounthistory"
		keyColumn="id" keyProperty="id" useGeneratedKeys="true">
		insert INTO edu_user_accounthistory (
		<include refid="edu_user_accounthistory_columns" />
		) VALUES (
		<include refid="edu_user_accounthistory_properties" />
		)
	</insert>

	<select id="getUserAccounthistoryById" resultMap="UserAccounthistoryResult"
		parameterType="Long">
		select
		<include refid="edu_user_accounthistory_columns" />,
		edu_user.show_name as userName,
		edu_user.email as email,
		edu_user.mobile as mobile,
		sys_user.login_name as adminUserName
		from edu_user_accounthistory
		left JOIN edu_user ON edu_user.user_id = edu_user_accounthistory.user_id
		LEFT JOIN sys_user ON  sys_user.user_id = edu_user_accounthistory.create_user
		where
		id = #{value}
	</select>
	
	<select id="getUserAccounthistoryByOutTtradeNo" resultMap="UserAccounthistoryResult" parameterType="String">
		select
		<include refid="edu_user_accounthistory_columns" />
		from edu_user_accounthistory
		where
		out_trade_no = #{value}

	</select>
	
	<select id="getUserAccounthistoryList" resultMap="UserAccounthistoryResult"
		parameterType="UserAccounthistory">
		select
		<include refid="edu_user_accounthistory_columns" />
		from edu_user_accounthistory
		<where>
			<if test="userId != null and userId!=''">
				and edu_user_accounthistory.user_id = #{userId}
			</if>
		</where>
	</select>


	<select id="getUserAccounthistoryListByCondition" resultMap="UserAccounthistoryResult"
		parameterType="java.util.HashMap">
		select
		<include refid="edu_user_accounthistory_columns" />,
		edu_user.show_name as userName,
		edu_user.email as email,
		edu_user.mobile as mobile
		from edu_user_accounthistory
		LEFT JOIN edu_user ON edu_user.user_id = edu_user_accounthistory.user_id
		<where>
			<if test="e.userId != null and e.userId!=''">
				edu_user_accounthistory.user_id = #{e.userId}
			</if>
			<if test="e.bizType != null and e.bizType!=''">
				and edu_user_accounthistory.biz_type = #{e.bizType}
			</if>
			<if test="e.status != null and e.status!=''">
				and edu_user_accounthistory.status = #{e.status}
			</if>
			<if test="e.actHistoryType != null and e.actHistoryType!=''">
				and edu_user_accounthistory.act_history_type = #{e.actHistoryType}
			</if>
			<if test="e.startTime!=null">
				and  <![CDATA[  edu_user_accounthistory.create_time >= #{e.startTime} ]]>
			</if>
			<if test="e.endTime!=null">
			 and <![CDATA[ edu_user_accounthistory.create_time <= #{e.endTime}]]>
			</if>
		</where>
		order by edu_user_accounthistory.create_time DESC
		<include refid="publicMapper.pageEnd" />
	</select>

	<select id="getUserAccounthistoryListByConditionCount" resultType="int" parameterType="java.util.HashMap">
		select
		count(*)
		from edu_user_accounthistory
		<where>
			<if test="e.userId != null and e.userId!=''">
				edu_user_accounthistory.user_id = #{e.userId}
			</if>
			<if test="e.bizType != null and e.bizType!=''">
				and edu_user_accounthistory.biz_type = #{e.bizType}
			</if>
			<if test="e.actHistoryType != null and e.actHistoryType!=''">
				and edu_user_accounthistory.act_history_type = #{e.actHistoryType}
			</if>
			<if test="e.startTime!=null">
				and  <![CDATA[  edu_user_accounthistory.create_time >= #{e.startTime} ]]>
			</if>
			<if test="e.endTime!=null">
			 and <![CDATA[ edu_user_accounthistory.create_time <= #{e.endTime}]]>
			</if>
		</where>
	</select>
	
	<!-- 个人中心账户历史，隐藏后台操作 -->
	<select id="getWebUserAccounthistoryListByCondition" resultMap="UserAccounthistoryResult" parameterType="java.util.HashMap">
		select
		<include refid="edu_user_accounthistory_columns" />
		from edu_user_accounthistory
		<where>
			edu_user_accounthistory.is_display=0
			<if test="e.userId != null and e.userId!=''">
				and edu_user_accounthistory.user_id = #{e.userId}
			</if>
			<if test="e.bizType != null and e.bizType!=''">
				and edu_user_accounthistory.biz_type = #{e.bizType}
			</if>
			<if test="e.actHistoryType != null and e.actHistoryType!=''">
				and edu_user_accounthistory.act_history_type = #{e.actHistoryType}
			</if>
			<if test="e.startTime!=null">
				and  <![CDATA[  edu_user_accounthistory.create_time >= #{e.startTime} ]]>
			</if>
			<if test="e.endTime!=null">
			 and <![CDATA[ edu_user_accounthistory.create_time <= #{e.endTime}]]>
			</if>
		</where>
		order by edu_user_accounthistory.create_time DESC
		<include refid="publicMapper.pageEnd" />
	</select>

	<select id="getWebUserAccounthistoryListByConditionCount" resultType="int" parameterType="java.util.HashMap">
		select
		count(*)
		from edu_user_accounthistory
		<where>
			edu_user_accounthistory.is_display=0
			<if test="e.userId != null and e.userId!=''">
				and edu_user_accounthistory.user_id = #{e.userId}
			</if>
			<if test="e.bizType != null and e.bizType!=''">
				and edu_user_accounthistory.biz_type = #{e.bizType}
			</if>
			<if test="e.actHistoryType != null and e.actHistoryType!=''">
				and edu_user_accounthistory.act_history_type = #{e.actHistoryType}
			</if>
			<if test="e.startTime!=null">
				and  <![CDATA[  edu_user_accounthistory.create_time >= #{e.startTime} ]]>
			</if>
			<if test="e.endTime!=null">
			 and <![CDATA[ edu_user_accounthistory.create_time <= #{e.endTime}]]>
			</if>
		</where>
	</select>
	<!-- 更新账户的信息 -->
	<update id="updateUserAccounthistory" parameterType="UserAccounthistory">
		update
		edu_user_accounthistory SET
		status = #{status},
		create_user = #{createUser},
		description = #{description},
		updateTime = #{updateTime}
		where
		id = #{id}
	</update>
</mapper>