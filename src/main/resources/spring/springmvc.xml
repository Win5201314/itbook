<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 引入同文件夹下的redis属性配置文件 -->
	<import resource="classpath:spring/applicationContext-redis.xml"/>
	<!--自动扫描该包，Spring mvc会将包下使用了@controller注解的类注册为spring 的controller-->
	<!--spring可以自动去扫描base-pack下面或者子包下面的java文件，
    如果扫描到有@Component @Controller@Service等这些注解的类，则把这些类注册为bean-->
	<context:component-scan base-package="com.itbook.controller"/>
	<!-- 启用spring mvc 注解 -->
	<context:annotation-config/>
	<!-- 开启注解 -->
	<mvc:annotation-driven/>
	<!--启动@MatrixVariable这个注解-->
	<mvc:annotation-driven enable-matrix-variables="true"/>

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	<!-- 资源映射 -->
	<mvc:resources location="/WEB-INF/css/" mapping="/css/**"/>
	<mvc:resources location="/WEB-INF/js/" mapping="/js/**"/>
	<mvc:resources location="/WEB-INF/jsp/" mapping="/jsp/**"/>

	<!-- 使用 Swagger Restful API文档时，添加此注解 -->
	<mvc:default-servlet-handler />

	<!-- 定义文件上传解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设定默认编码 -->
		<property name="defaultEncoding" value="UTF-8"/>
		<!-- 设定文件上传的最大值5MB，5*1024*1024 -->
		<property name="maxUploadSize" value="5242880"/>
	</bean>

	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->
	<!--视图解析器-->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<!-- 配置拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/login"/>
			<bean class="com.itbook.interceptor.TestInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	<!--重要！配置swagger资源不被拦截-->
	<mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />
	<!--重要！将你的SwaggerConfig配置类注入-->
	<bean id="swaggerConfig" class="com.itbook.config.SwaggerConfiguration"/>
</beans>